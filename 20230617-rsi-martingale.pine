// This source code is subject to the terms of the MIT License at https://github.com/taichunmin/tradingview-pine/blob/master/LICENSE
// © taichunmin

//@version=5
strategy(calc_on_every_tick = true, commission_type = strategy.commission.percent, commission_value = 0.05, currency = currency.USD, default_qty_type = strategy.cash, default_qty_value = 100, initial_capital = 100, max_labels_count = 500, max_lines_count = 500, overlay = true, precision = 3, slippage = 0, title = "RSI7多空追蹤馬丁策略")

// var
entryMorePerc = input.float(defval=2.0, title="加倉價差 %", minval=0.2, maxval=15.0, step=0.1)
entryMoreTrailing = input.float(defval=1.0, title="加倉回撤 %", minval=0.1, maxval=15.0, step=0.1)
entryMoreTimes = input.int(defval=8, title="加倉次數", minval=1, maxval=15, step=1)
exitPerc = input.float(defval=2.0, title="止盈 %", minval=0.2, step=0.1)
exitTrailing = input.float(defval=1.0, title="止盈回撤 %", minval=0.1, step=0.1)
stopLossPerc = input.float(defval=10.0, title="止損 %", minval=0.1, maxval=99.9, step=0.1)
qtyRatio = input.float(defval=1.5, title="加倉倍數", minval=1.0, maxval=2.0, step=0.1)

// backtest
backtestUseTimeRange = input.bool(defval=true, title="回測時間範圍")
backtestStartYear = input.int(defval=2018, minval=1950, step=1, title="Start Year")
backtestStartMonth = input.int(defval=1, minval=1, maxval=12, step=1, title="Start Month")
backtestStartDay = input.int(defval=1, minval=1, maxval=31, step=1, title="Start Day")
backtestEndYear = input.int(defval=9999, minval=1950, step=1, title="End Year")
backtestEndMonth = input.int(defval=1, minval=1, maxval=12, step=1, title="End Month")
backtestEndDay = input.int(defval=1, minval=1, maxval=31, step=1, title="End Day")
backtestInTimeRange = backtestUseTimeRange ? (time >= timestamp(backtestStartYear, backtestStartMonth, backtestStartDay, 00, 00)) and (time < timestamp(backtestEndYear, backtestEndMonth, backtestEndDay, 23, 59)) : true

// var
var entryQtys = array.new_float(entryMoreTimes + 1, 1.0) // 進場投資額權重
for i = 2 to entryMoreTimes
    array.set(entryQtys, i, array.get(i - 1) * qtyRatio)
var entryQtySum = array.sum(entryQtys) // 進場投資額權重總和

// strategy
rsi7 = ta.rsi(close, 7)
plot(rsi7, title="RSI7", color=color.blue, linewidth=2)
isRsi7Crossover30 = ta.crossover(rsi7, 30.0)
isRsi7Crossunder70 = ta.crossunder(rsi7, 70.0)

if backtestInTimeRange and strategy.opentrades == 0 // 未持倉，判斷進場時機
    if isRsi7Crossover30
        // initialize entrys
        array.get(0).price = close[0]
        array.get(1).price = array.get(0).price * (100.0 - entryMorePerc) / 100.0
        strategy.entry(direction = strategy.long, id = "Long", qty = 1, comment="[{{ time }}] 做多進場, 價格: {{ close }}")
    else if isRsi7Crossunder70
        strategy.entry(direction = strategy.short, id = "Short", qty = 1, stop = close * (1 + stopLossPerc / 100), comment="[{{ time }}] 做空進場, 價格: {{ close }}")
else if strategy.position_size > 0 // 做多，判斷是否需加倉或止盈
    entryNext = strategy.opentrades.entry_price(strategy.opentrades - 1)
